import e,{useState as t,useEffect as r,Fragment as n}from"react";const a=e=>Object.keys(e).filter((t=>void 0!==e[t]&&null!==e[t]&&""!==e[t]&&!1!==e[t])).reduce(((t,r)=>({...t,[r]:e[r]})),{}),l=e=>({result:[],resolve:function(t){const{error:r}=e.validate(t,{abortEarly:!1});if(r)return this.result=r.details.map((({message:e,path:t})=>({message:e,path:t.join(".")}))),this},getFilteredErrors:function(e){return this.result.find((t=>t?.path===e))?.message}}),s=(e,t,r)=>{let n=null;if(r?.required){let a=r?.required?.value||r?.required,l=r?.required?.message||`Field ${e} is required`;n=!t&&a&&l}if(r?.pattern){let a=r?.pattern?.value||r?.pattern,l=r?.pattern?.message||`Field ${e} is invalid`;n=t&&!a.test(t)&&l}if(!n&&r?.min&&r?.max){let a=r?.min?.value||r?.min,l=r?.max?.value||r?.max;n=(Number(t)<a||Number(t)>l)&&`Field ${e} must be between ${a} and ${l}`}if(!n&&r?.min){let a=r?.min?.value||r?.min,l=r?.min?.message||`Field ${e} is smaller than ${a}`;n=t&&Number(t)<a&&l}if(!n&&r?.max){let a=r?.max?.value||r?.max,l=r?.max?.message||`Field ${e} is higher than ${a}`;n=t&&Number(t)>a&&l}if(!n&&r?.minLength&&r?.maxLength){let a=r?.minLength?.value||r?.minLength,l=r?.maxLength?.value||r?.maxLength;n=(t?.length<a||t?.length>l)&&`Field ${e} must be between ${a} and ${l}`}if(!n&&r?.minLength){let a=r?.minLength?.value||r?.minLength,l=r?.minLength?.message||`Field ${e} is too short`;n=t?.length<a&&l}if(!n&&r?.maxLength){let a=r?.maxLength?.value||r?.maxLength,l=r?.maxLength?.message||`Field ${e} is too long`;n=t?.length>a&&l}return!n&&r?.validate&&(n=r?.validate?.(t)),n};function i({validationSchema:e,defaultValues:r={}}={}){const[n,l]=t(r),[i,u]=t({}),[o,m]=t({}),g=(t,r,n)=>{const l=e?e?.resolve({[t]:r})?.getFilteredErrors(t):s(t,r,n);m((e=>a({...e,[t]:l})))},h=(e,t)=>r=>d(e,t,r),d=(e,t,r)=>{l((t=>({...t,[e]:r}))),g(e,r,t)};return{register:(e,t,r)=>(!n?.hasOwnProperty(e)&&l((t=>({...t,...!t?.hasOwnProperty(e)&&{[e]:r}}))),!i?.hasOwnProperty(e)&&u((r=>({...r,[e]:t||{}}))),{value:n?.[e]||"",onChange:r=>d?.(e,t,r?.target?.value),onBlur:r=>d?.(e,t,r?.target?.value)}),unRegister:e=>{"string"==typeof e&&l((({name:e,...t})=>({...t}))),Array.isArray(e)&&l((t=>{return r=t,n=e,Object.fromEntries(Object.entries(r).filter((([e])=>!n.includes(e))));var r,n}))},values:n,setValue:(e,t,r={shouldValidate:!0})=>{l((r=>({...r,[e]:t}))),r?.shouldValidate&&g(e,t,i?.[e])},getValues:e=>e?n?.[e]:n,errors:o,setErrors:m,setError:(e,t)=>m((r=>({...r,[e]:t}))),getError:e=>o?.[e],clearError:e=>m((t=>{const r={...t};return delete r[e],r})),reset:(e={})=>{l((t=>r||{...Object.keys(t).reduce(((e,t)=>({...e,[t]:""})),{}),...e})),m({})},trigger:e=>{"string"==typeof e?g(e,n[e],i[e]):Array.isArray(e)?e.forEach((e=>g(e,n[e],i[e]))):Object.keys(n).forEach((e=>g(e,n[e],i[e])))},onChangeValue:h,onBlur:h,handleSubmit:t=>()=>{Object.keys(n).forEach((e=>{g(e,n[e],i[e])})),(()=>{const t=Object.keys(n).reduce(((t,r)=>({...t,[r]:e?e?.resolve({[r]:n[r]})?.getFilteredErrors(r):s(r,n[r],i[r])})),{});return Object.keys(a(t))?.length})()||Object.values(o).every((e=>!e))&&t(n)}}}function u({control:t,name:a,rules:l,children:s,defaultValue:i,render:u}){const{register:o,setValue:m}=t;r((()=>{o(a,l,i),i&&m(a,i)}),[]);const g=t?.values?.[a],h=t?.onChangeValue?.(a,l),d=t?.onBlur?.(a,l);return e.createElement(n,null,s?.({onChange:h,value:g,name:a,onBlur:d})||u?.({onChange:h,value:g,name:a,onBlur:d}))}export{u as Field,l as joiResolver,i as useForm};
